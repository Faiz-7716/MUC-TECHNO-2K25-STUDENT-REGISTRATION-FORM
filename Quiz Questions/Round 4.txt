Python

Q1

def func(a, b=[]):
    b.append(a)
    return b

print(func(1))
print(func(2))


A) [1], [2]
B) [1], [1, 2] ✅
C) [1, 2], [1, 2]
D) Error

Q2

for i in range(3):
    print(i, end=' ')
else:
    print("done")


A) 0 1 2
B) 0 1 2 done ✅
C) 0 1 2 3 done
D) Error

Q3

x = "python"
print(x[::-1][2])


A) h ✅
B) t
C) o
D) Error

Q4

def add_to_num(num, target=[]):
    target.append(num)
    return target

print(add_to_num(5))
print(add_to_num(10, []))
print(add_to_num(15))


A) [5], [10], [15]
B) [5], [10], [5, 15] ✅
C) [5], [10], [10, 15]
D) Error

Q5

a = [1, 2, 3]
b = a[:]
b[0] = 99
print(a[0], b[0])


A) 1 99 ✅
B) 99 1
C) 99 99
D) Error

Q6

def f(val, lst=[]):
    lst.append(val * 2)
    return lst

print(f(2))
print(f(3))
print(f(4, []))


A) [2], [2, 3], [4]
B) [4], [4, 6], [8] ✅
C) [4], [4, 6], [8]
D) [4], [4, 6], [8]

Q7

def func(a, b):
    return a if a > b else b

print(func(5, 10) + func(20, 15))


A) 25
B) 30 ✅
C) 35
D) Error

Q8

x = [1, 2, 3]
y = x
z = x[:]
y[0] = 99
z[1] = 88
print(x, y, z)


A) [99, 2, 3] [99, 2, 3] [1, 88, 3] ✅
B) [1, 2, 3] [99, 2, 3] [1, 88, 3]
C) [99, 88, 3] [99, 2, 3] [1, 2, 3]
D) Error

Q9

def mystery(n):
    if n == 0:
        return 0
    return n + mystery(n-1)

print(mystery(4))


A) 4
B) 6
C) 10 ✅
D) Error

Q10

def outer():
    x = 5
    def inner():
        nonlocal x
        x += 1
        return x
    return inner

f = outer()
print(f())
print(f())


A) 5, 6
B) 6, 7 ✅
C) 5, 5
D) Error

cpp
C++ Output Prediction Questions (Conceptual, College-Level, with Options)

C++ Q1 (post-increment in assignment)

#include <iostream>
using namespace std;

int main() {
    int a = 5;
    int b = a++;
    cout << a << " " << b;
    return 0;
}


A) 5 6
B) 6 5 ✅
C) 5 5
D) 6 6

C++ Q2 (ternary with conditional return)

#include <iostream>
using namespace std;

int main() {
    int x = 10;
    int y = 20;
    cout << (x > y ? x : y);
    return 0;
}


A) 10
B) 20 ✅
C) 30
D) Error

C++ Q3 (pointer arithmetic with array)

#include <iostream>
using namespace std;

int main() {
    int arr[3] = {1, 2, 3};
    cout << *(arr + 1);
    return 0;
}


A) 1
B) 2 ✅
C) 3
D) Error

C++ Q4 (reference variable)

#include <iostream>
using namespace std;

int main() {
    int a = 5;
    int &r = a;
    r += 10;
    cout << a << " " << r;
    return 0;
}


A) 5 10
B) 10 5
C) 15 15 ✅
D) 10 10

C++ Q5 (pre/post increment combined)

#include <iostream>
using namespace std;

int main() {
    int x = 3;
    cout << (++x * 2) << " " << (x-- * 2);
    return 0;
}


A) 8 8 ✅
B) 8 10
C) 6 8
D) 10 6

C++ Q6 (pointer + array)

#include <iostream>
using namespace std;

int main() {
    int arr[3] = {1, 2, 3};
    int *p = arr;
    cout << *(p+1) << " " << *p++;
    return 0;
}


A) 1 2
B) 2 1 ✅
C) 2 2
D) 1 1

C++ Q7 (typecasting + integer division)

#include <iostream>
using namespace std;

int main() {
    int a = 7, b = 2;
    cout << a / b * 2.0;
    return 0;
}


A) 3.5
B) 6.0 ✅
C) 7.0
D) 5.0

C++ Q8 (loop + post-increment inside loop)

#include <iostream>
using namespace std;

int main() {
    for(int i=0; i<3; i++)
        cout << i++ << " ";
    return 0;
}


A) 0 1 2
B) 0 2 ✅
C) 1 2 3
D) 0 1 2 3

C++ Q9 (recursion)

#include <iostream>
using namespace std;

int fun(int n) {
    if(n == 0) return 0;
    return n + fun(n-1);
}

int main() {
    cout << fun(4);
    return 0;
}


A) 4
B) 6
C) 10 ✅
D) 0

C++ Q10 (static variable in function)

#include <iostream>
using namespace std;

void fun() {
    static int x = 0;
    x++;
    cout << x << " ";
}

int main() {
    fun();
    fun();
    fun();
    return 0;
}


A) 1 2 3 ✅
B) 1 1 1
C) 0 1 2
D) Error